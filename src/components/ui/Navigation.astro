<nav class="flex flex-wrap justify-center border-b border-stone-300 mb-8 gap-6">
  <button
    id="nav-planificador"
    class="nav-button active"
    data-section="planificador">Planificador Semanal</button
  >
  <button id="nav-recetario" class="nav-button" data-section="recetario"
    >Recetas</button
  >
  <button id="nav-galeria" class="nav-button" data-section="galeria"
    >Suplementos</button
  >
  <button id="nav-consejos" class="nav-button" data-section="consejos"
    >Estrategias y Consejos</button
  >

  <button class="nav-button" data-section="progreso">Progreso</button>
</nav>

<script>
  // Este script se ejecuta en el lado del cliente (en el navegador)
  document.addEventListener("DOMContentLoaded", () => {
    const navButtons = document.querySelectorAll(".nav-button");
    const contentSections = document.querySelectorAll(".content-section");

    // Función para cambiar a una sección específica
    function switchToSection(sectionId: string) {
      // Actualizar botones de navegación
      navButtons.forEach((btn) => {
        btn.classList.remove("active");
        if (btn.getAttribute("data-section") === sectionId) {
          btn.classList.add("active");
        }
      });

      // Mostrar/ocultar secciones de contenido
      contentSections.forEach((section) => {
        if (section.id === sectionId) {
          section.classList.remove("hidden");
        } else {
          section.classList.add("hidden");
        }
      });

      // Guardar la sección activa en localStorage
      localStorage.setItem("activeSection", sectionId);
    }

    // Función para cargar la sección activa desde localStorage
    function loadActiveSection() {
      const savedSection = localStorage.getItem("activeSection");

      // Si hay una sección guardada y existe en la página, usarla
      if (savedSection && document.getElementById(savedSection)) {
        switchToSection(savedSection);
      } else {
        // Si no hay sección guardada o no existe, usar la primera (planificador)
        const firstSection = navButtons[0].getAttribute("data-section");
        if (firstSection) {
          switchToSection(firstSection);
        }
      }
    }

    // Cargar la sección activa al cargar la página
    loadActiveSection();

    // Event listeners para los botones de navegación
    navButtons.forEach((button) => {
      button.addEventListener("click", () => {
        const targetSectionId = button.getAttribute("data-section");
        if (targetSectionId) {
          switchToSection(targetSectionId);
        }
      });
    });

    // Emitir evento cuando la navegación esté lista
    setTimeout(() => {
      const event = new CustomEvent("navigationReady");
      document.dispatchEvent(event);
    }, 100);
  });
</script>
<style>
  /* Añadimos un poco de estilo para los botones, que lo borramos antes */
  .nav-button {
    transition: all 0.3s ease;
    border-bottom: 2px solid transparent;
    padding: 1rem 1.5rem;
  }
  .nav-button.active {
    border-bottom-color: #6b8a7a;
    color: #3a5a40;
    font-weight: 600;
  }
  .nav-button:hover {
    background-color: #f0ebe5;
  }
</style>
